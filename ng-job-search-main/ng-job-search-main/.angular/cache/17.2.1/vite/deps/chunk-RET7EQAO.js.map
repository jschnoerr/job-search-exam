{
  "version": 3,
  "sources": ["../../../../../node_modules/outvariant/lib/index.mjs", "../../../../../node_modules/msw/lib/core/utils/internal/devUtils.mjs", "../../../../../node_modules/strict-event-emitter/lib/index.mjs", "../../../../../node_modules/msw/lib/core/utils/internal/pipeEvents.mjs", "../../../../../node_modules/msw/lib/core/utils/internal/toReadonlyArray.mjs", "../../../../../node_modules/msw/lib/core/utils/internal/Disposable.mjs", "../../../../../node_modules/msw/lib/core/SetupApi.mjs", "../../../../../node_modules/msw/lib/core/utils/internal/getCallFrame.mjs", "../../../../../node_modules/msw/lib/core/utils/internal/isIterable.mjs", "../../../../../node_modules/msw/lib/core/handlers/RequestHandler.mjs", "../../../../../node_modules/@open-draft/until/lib/index.mjs", "../../../../../node_modules/msw/lib/core/utils/executeHandlers.mjs", "../../../../../node_modules/msw/lib/core/utils/request/toPublicUrl.mjs", "../../../../../node_modules/msw/lib/core/utils/request/onUnhandledRequest.mjs", "../../../../../node_modules/@mswjs/cookies/lib/index.mjs", "../../../../../node_modules/msw/lib/core/utils/request/readResponseCookies.mjs", "../../../../../node_modules/msw/lib/core/utils/handleRequest.mjs"],
  "sourcesContent": ["// src/format.ts\nvar POSITIONALS_EXP = /(%?)(%([sdijo]))/g;\nfunction serializePositional(positional, flag) {\n  switch (flag) {\n    case \"s\":\n      return positional;\n    case \"d\":\n    case \"i\":\n      return Number(positional);\n    case \"j\":\n      return JSON.stringify(positional);\n    case \"o\": {\n      if (typeof positional === \"string\") {\n        return positional;\n      }\n      const json = JSON.stringify(positional);\n      if (json === \"{}\" || json === \"[]\" || /^\\[object .+?\\]$/.test(json)) {\n        return positional;\n      }\n      return json;\n    }\n  }\n}\nfunction format(message, ...positionals) {\n  if (positionals.length === 0) {\n    return message;\n  }\n  let positionalIndex = 0;\n  let formattedMessage = message.replace(\n    POSITIONALS_EXP,\n    (match, isEscaped, _, flag) => {\n      const positional = positionals[positionalIndex];\n      const value = serializePositional(positional, flag);\n      if (!isEscaped) {\n        positionalIndex++;\n        return value;\n      }\n      return match;\n    }\n  );\n  if (positionalIndex < positionals.length) {\n    formattedMessage += ` ${positionals.slice(positionalIndex).join(\" \")}`;\n  }\n  formattedMessage = formattedMessage.replace(/%{2,2}/g, \"%\");\n  return formattedMessage;\n}\n\n// src/invariant.ts\nvar STACK_FRAMES_TO_IGNORE = 2;\nfunction cleanErrorStack(error) {\n  if (!error.stack) {\n    return;\n  }\n  const nextStack = error.stack.split(\"\\n\");\n  nextStack.splice(1, STACK_FRAMES_TO_IGNORE);\n  error.stack = nextStack.join(\"\\n\");\n}\nvar InvariantError = class extends Error {\n  constructor(message, ...positionals) {\n    super(message);\n    this.message = message;\n    this.name = \"Invariant Violation\";\n    this.message = format(message, ...positionals);\n    cleanErrorStack(this);\n  }\n};\nvar invariant = (predicate, message, ...positionals) => {\n  if (!predicate) {\n    throw new InvariantError(message, ...positionals);\n  }\n};\ninvariant.as = (ErrorConstructor, predicate, message, ...positionals) => {\n  if (!predicate) {\n    const formatMessage = positionals.length === 0 ? message : format(message, positionals);\n    let error;\n    try {\n      error = Reflect.construct(ErrorConstructor, [formatMessage]);\n    } catch (err) {\n      error = ErrorConstructor(formatMessage);\n    }\n    throw error;\n  }\n};\nexport {\n  InvariantError,\n  format,\n  invariant\n};\n", "import { format } from \"outvariant\";\nconst LIBRARY_PREFIX = \"[MSW]\";\nfunction formatMessage(message, ...positionals) {\n  const interpolatedMessage = format(message, ...positionals);\n  return `${LIBRARY_PREFIX} ${interpolatedMessage}`;\n}\nfunction warn(message, ...positionals) {\n  console.warn(formatMessage(message, ...positionals));\n}\nfunction error(message, ...positionals) {\n  console.error(formatMessage(message, ...positionals));\n}\nconst devUtils = {\n  formatMessage,\n  warn,\n  error\n};\nexport {\n  devUtils\n};\n", "// src/MemoryLeakError.ts\nvar MemoryLeakError = class extends Error {\n  constructor(emitter, type, count) {\n    super(\n      `Possible EventEmitter memory leak detected. ${count} ${type.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`\n    );\n    this.emitter = emitter;\n    this.type = type;\n    this.count = count;\n    this.name = \"MaxListenersExceededWarning\";\n  }\n};\n\n// src/Emitter.ts\nvar _Emitter = class {\n  static listenerCount(emitter, eventName) {\n    return emitter.listenerCount(eventName);\n  }\n  constructor() {\n    this.events = /* @__PURE__ */ new Map();\n    this.maxListeners = _Emitter.defaultMaxListeners;\n    this.hasWarnedAboutPotentialMemoryLeak = false;\n  }\n  _emitInternalEvent(internalEventName, eventName, listener) {\n    this.emit(\n      internalEventName,\n      ...[eventName, listener]\n    );\n  }\n  _getListeners(eventName) {\n    return Array.prototype.concat.apply([], this.events.get(eventName)) || [];\n  }\n  _removeListener(listeners, listener) {\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n    return [];\n  }\n  _wrapOnceListener(eventName, listener) {\n    const onceListener = (...data) => {\n      this.removeListener(eventName, onceListener);\n      return listener.apply(this, data);\n    };\n    Object.defineProperty(onceListener, \"name\", { value: listener.name });\n    return onceListener;\n  }\n  setMaxListeners(maxListeners) {\n    this.maxListeners = maxListeners;\n    return this;\n  }\n  /**\n   * Returns the current max listener value for the `Emitter` which is\n   * either set by `emitter.setMaxListeners(n)` or defaults to\n   * `Emitter.defaultMaxListeners`.\n   */\n  getMaxListeners() {\n    return this.maxListeners;\n  }\n  /**\n   * Returns an array listing the events for which the emitter has registered listeners.\n   * The values in the array will be strings or Symbols.\n   */\n  eventNames() {\n    return Array.from(this.events.keys());\n  }\n  /**\n   * Synchronously calls each of the listeners registered for the event named `eventName`,\n   * in the order they were registered, passing the supplied arguments to each.\n   * Returns `true` if the event has listeners, `false` otherwise.\n   *\n   * @example\n   * const emitter = new Emitter<{ hello: [string] }>()\n   * emitter.emit('hello', 'John')\n   */\n  emit(eventName, ...data) {\n    const listeners = this._getListeners(eventName);\n    listeners.forEach((listener) => {\n      listener.apply(this, data);\n    });\n    return listeners.length > 0;\n  }\n  addListener(eventName, listener) {\n    this._emitInternalEvent(\"newListener\", eventName, listener);\n    const nextListeners = this._getListeners(eventName).concat(listener);\n    this.events.set(eventName, nextListeners);\n    if (this.maxListeners > 0 && this.listenerCount(eventName) > this.maxListeners && !this.hasWarnedAboutPotentialMemoryLeak) {\n      this.hasWarnedAboutPotentialMemoryLeak = true;\n      const memoryLeakWarning = new MemoryLeakError(\n        this,\n        eventName,\n        this.listenerCount(eventName)\n      );\n      console.warn(memoryLeakWarning);\n    }\n    return this;\n  }\n  on(eventName, listener) {\n    return this.addListener(eventName, listener);\n  }\n  once(eventName, listener) {\n    return this.addListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  prependListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      const nextListeners = [listener].concat(listeners);\n      this.events.set(eventName, nextListeners);\n    } else {\n      this.events.set(eventName, listeners.concat(listener));\n    }\n    return this;\n  }\n  prependOnceListener(eventName, listener) {\n    return this.prependListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  removeListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      this._removeListener(listeners, listener);\n      this.events.set(eventName, listeners);\n      this._emitInternalEvent(\"removeListener\", eventName, listener);\n    }\n    return this;\n  }\n  /**\n   * Alias for `emitter.removeListener()`.\n   *\n   * @example\n   * emitter.off('hello', listener)\n   */\n  off(eventName, listener) {\n    return this.removeListener(eventName, listener);\n  }\n  removeAllListeners(eventName) {\n    if (eventName) {\n      this.events.delete(eventName);\n    } else {\n      this.events.clear();\n    }\n    return this;\n  }\n  /**\n   * Returns a copy of the array of listeners for the event named `eventName`.\n   */\n  listeners(eventName) {\n    return Array.from(this._getListeners(eventName));\n  }\n  /**\n   * Returns the number of listeners listening to the event named `eventName`.\n   */\n  listenerCount(eventName) {\n    return this._getListeners(eventName).length;\n  }\n  rawListeners(eventName) {\n    return this.listeners(eventName);\n  }\n};\nvar Emitter = _Emitter;\nEmitter.defaultMaxListeners = 10;\nexport {\n  Emitter,\n  MemoryLeakError\n};\n", "function pipeEvents(source, destination) {\n  const rawEmit = source.emit;\n  if (rawEmit._isPiped) {\n    return;\n  }\n  const sourceEmit = function sourceEmit2(event, ...data) {\n    destination.emit(event, ...data);\n    return rawEmit.call(this, event, ...data);\n  };\n  sourceEmit._isPiped = true;\n  source.emit = sourceEmit;\n}\nexport {\n  pipeEvents\n};\n", "function toReadonlyArray(source) {\n  const clone = [...source];\n  Object.freeze(clone);\n  return clone;\n}\nexport {\n  toReadonlyArray\n};\n", "class Disposable {\n  subscriptions = [];\n  async dispose() {\n    await Promise.all(this.subscriptions.map((subscription) => subscription()));\n  }\n}\nexport {\n  Disposable\n};\n", "import { invariant } from \"outvariant\";\nimport { Emitter } from \"strict-event-emitter\";\nimport { devUtils } from './utils/internal/devUtils.mjs';\nimport { pipeEvents } from './utils/internal/pipeEvents.mjs';\nimport { toReadonlyArray } from './utils/internal/toReadonlyArray.mjs';\nimport { Disposable } from './utils/internal/Disposable.mjs';\nclass HandlersController {\n}\nclass InMemoryHandlersController {\n  constructor(initialHandlers) {\n    this.initialHandlers = initialHandlers;\n    this.handlers = [...initialHandlers];\n  }\n  handlers;\n  prepend(runtimeHandles) {\n    this.handlers.unshift(...runtimeHandles);\n  }\n  reset(nextHandlers) {\n    this.handlers = nextHandlers.length > 0 ? [...nextHandlers] : [...this.initialHandlers];\n  }\n  currentHandlers() {\n    return this.handlers;\n  }\n}\nclass SetupApi extends Disposable {\n  handlersController;\n  emitter;\n  publicEmitter;\n  events;\n  constructor(...initialHandlers) {\n    super();\n    invariant(\n      this.validateHandlers(initialHandlers),\n      devUtils.formatMessage(\n        `Failed to apply given request handlers: invalid input. Did you forget to spread the request handlers Array?`\n      )\n    );\n    this.handlersController = new InMemoryHandlersController(initialHandlers);\n    this.emitter = new Emitter();\n    this.publicEmitter = new Emitter();\n    pipeEvents(this.emitter, this.publicEmitter);\n    this.events = this.createLifeCycleEvents();\n    this.subscriptions.push(() => {\n      this.emitter.removeAllListeners();\n      this.publicEmitter.removeAllListeners();\n    });\n  }\n  validateHandlers(handlers) {\n    return handlers.every((handler) => !Array.isArray(handler));\n  }\n  use(...runtimeHandlers) {\n    invariant(\n      this.validateHandlers(runtimeHandlers),\n      devUtils.formatMessage(\n        `Failed to call \"use()\" with the given request handlers: invalid input. Did you forget to spread the array of request handlers?`\n      )\n    );\n    this.handlersController.prepend(runtimeHandlers);\n  }\n  restoreHandlers() {\n    this.handlersController.currentHandlers().forEach((handler) => {\n      handler.isUsed = false;\n    });\n  }\n  resetHandlers(...nextHandlers) {\n    this.handlersController.reset(nextHandlers);\n  }\n  listHandlers() {\n    return toReadonlyArray(this.handlersController.currentHandlers());\n  }\n  createLifeCycleEvents() {\n    return {\n      on: (...args) => {\n        return this.publicEmitter.on(...args);\n      },\n      removeListener: (...args) => {\n        return this.publicEmitter.removeListener(...args);\n      },\n      removeAllListeners: (...args) => {\n        return this.publicEmitter.removeAllListeners(...args);\n      }\n    };\n  }\n}\nexport {\n  HandlersController,\n  InMemoryHandlersController,\n  SetupApi\n};\n", "const SOURCE_FRAME = /[\\/\\\\]msw[\\/\\\\]src[\\/\\\\](.+)/;\nconst BUILD_FRAME = /(node_modules)?[\\/\\\\]lib[\\/\\\\](core|browser|node|native|iife)[\\/\\\\]|^[^\\/\\\\]*$/;\nfunction getCallFrame(error) {\n  const stack = error.stack;\n  if (!stack) {\n    return;\n  }\n  const frames = stack.split(\"\\n\").slice(1);\n  const declarationFrame = frames.find((frame) => {\n    return !(SOURCE_FRAME.test(frame) || BUILD_FRAME.test(frame));\n  });\n  if (!declarationFrame) {\n    return;\n  }\n  const declarationPath = declarationFrame.replace(/\\s*at [^()]*\\(([^)]+)\\)/, \"$1\").replace(/^@/, \"\");\n  return declarationPath;\n}\nexport {\n  getCallFrame\n};\n", "function isIterable(fn) {\n  if (!fn) {\n    return false;\n  }\n  return typeof fn[Symbol.iterator] == \"function\";\n}\nexport {\n  isIterable\n};\n", "import { invariant } from \"outvariant\";\nimport { getCallFrame } from '../utils/internal/getCallFrame.mjs';\nimport { isIterable } from '../utils/internal/isIterable.mjs';\nclass RequestHandler {\n  static cache = /* @__PURE__ */ new WeakMap();\n  info;\n  /**\n   * Indicates whether this request handler has been used\n   * (its resolver has successfully executed).\n   */\n  isUsed;\n  resolver;\n  resolverGenerator;\n  resolverGeneratorResult;\n  options;\n  constructor(args) {\n    this.resolver = args.resolver;\n    this.options = args.options;\n    const callFrame = getCallFrame(new Error());\n    this.info = {\n      ...args.info,\n      callFrame\n    };\n    this.isUsed = false;\n  }\n  /**\n   * Parse the intercepted request to extract additional information from it.\n   * Parsed result is then exposed to other methods of this request handler.\n   */\n  async parse(_args) {\n    return {};\n  }\n  /**\n   * Test if this handler matches the given request.\n   *\n   * This method is not used internally but is exposed\n   * as a convenience method for consumers writing custom\n   * handlers.\n   */\n  async test(args) {\n    const parsedResult = await this.parse({\n      request: args.request,\n      resolutionContext: args.resolutionContext\n    });\n    return this.predicate({\n      request: args.request,\n      parsedResult,\n      resolutionContext: args.resolutionContext\n    });\n  }\n  extendResolverArgs(_args) {\n    return {};\n  }\n  // Clone the request instance before it's passed to the handler phases\n  // and the response resolver so we can always read it for logging.\n  // We only clone it once per request to avoid unnecessary overhead.\n  cloneRequestOrGetFromCache(request) {\n    const existingClone = RequestHandler.cache.get(request);\n    if (typeof existingClone !== \"undefined\") {\n      return existingClone;\n    }\n    const clonedRequest = request.clone();\n    RequestHandler.cache.set(request, clonedRequest);\n    return clonedRequest;\n  }\n  /**\n   * Execute this request handler and produce a mocked response\n   * using the given resolver function.\n   */\n  async run(args) {\n    if (this.isUsed && this.options?.once) {\n      return null;\n    }\n    const requestClone = this.cloneRequestOrGetFromCache(args.request);\n    const parsedResult = await this.parse({\n      request: args.request,\n      resolutionContext: args.resolutionContext\n    });\n    const shouldInterceptRequest = this.predicate({\n      request: args.request,\n      parsedResult,\n      resolutionContext: args.resolutionContext\n    });\n    if (!shouldInterceptRequest) {\n      return null;\n    }\n    if (this.isUsed && this.options?.once) {\n      return null;\n    }\n    this.isUsed = true;\n    const executeResolver = this.wrapResolver(this.resolver);\n    const resolverExtras = this.extendResolverArgs({\n      request: args.request,\n      parsedResult\n    });\n    const mockedResponsePromise = executeResolver({\n      ...resolverExtras,\n      requestId: args.requestId,\n      request: args.request\n    }).catch((errorOrResponse) => {\n      if (errorOrResponse instanceof Response) {\n        return errorOrResponse;\n      }\n      throw errorOrResponse;\n    });\n    const mockedResponse = await mockedResponsePromise;\n    const executionResult = this.createExecutionResult({\n      // Pass the cloned request to the result so that logging\n      // and other consumers could read its body once more.\n      request: requestClone,\n      requestId: args.requestId,\n      response: mockedResponse,\n      parsedResult\n    });\n    return executionResult;\n  }\n  wrapResolver(resolver) {\n    return async (info) => {\n      const result = this.resolverGenerator || await resolver(info);\n      if (isIterable(result)) {\n        this.isUsed = false;\n        const { value, done } = result[Symbol.iterator]().next();\n        const nextResponse = await value;\n        if (done) {\n          this.isUsed = true;\n        }\n        if (!nextResponse && done) {\n          invariant(\n            this.resolverGeneratorResult,\n            \"Failed to returned a previously stored generator response: the value is not a valid Response.\"\n          );\n          return this.resolverGeneratorResult.clone();\n        }\n        if (!this.resolverGenerator) {\n          this.resolverGenerator = result;\n        }\n        if (nextResponse) {\n          this.resolverGeneratorResult = nextResponse?.clone();\n        }\n        return nextResponse;\n      }\n      return result;\n    };\n  }\n  createExecutionResult(args) {\n    return {\n      handler: this,\n      request: args.request,\n      requestId: args.requestId,\n      response: args.response,\n      parsedResult: args.parsedResult\n    };\n  }\n}\nexport {\n  RequestHandler\n};\n", "// src/until.ts\nvar until = async (promise) => {\n  try {\n    const data = await promise().catch((error) => {\n      throw error;\n    });\n    return { error: null, data };\n  } catch (error) {\n    return { error, data: null };\n  }\n};\nexport {\n  until\n};\n", "const executeHandlers = async ({\n  request,\n  requestId,\n  handlers,\n  resolutionContext\n}) => {\n  let matchingHandler = null;\n  let result = null;\n  for (const handler of handlers) {\n    result = await handler.run({ request, requestId, resolutionContext });\n    if (result !== null) {\n      matchingHandler = handler;\n    }\n    if (result?.response) {\n      break;\n    }\n  }\n  if (matchingHandler) {\n    return {\n      handler: matchingHandler,\n      parsedResult: result?.parsedResult,\n      response: result?.response\n    };\n  }\n  return null;\n};\nexport {\n  executeHandlers\n};\n", "function toPublicUrl(url) {\n  if (typeof location === \"undefined\") {\n    return url.toString();\n  }\n  const urlInstance = url instanceof URL ? url : new URL(url);\n  return urlInstance.origin === location.origin ? urlInstance.pathname : urlInstance.origin + urlInstance.pathname;\n}\nexport {\n  toPublicUrl\n};\n", "import { toPublicUrl } from './toPublicUrl.mjs';\nimport { devUtils } from '../internal/devUtils.mjs';\nasync function onUnhandledRequest(request, strategy = \"warn\") {\n  const url = new URL(request.url);\n  const publicUrl = toPublicUrl(url);\n  const unhandledRequestMessage = `intercepted a request without a matching request handler:\n\n  \\u2022 ${request.method} ${publicUrl}\n\nIf you still wish to intercept this unhandled request, please create a request handler for it.\nRead more: https://mswjs.io/docs/getting-started/mocks`;\n  function applyStrategy(strategy2) {\n    switch (strategy2) {\n      case \"error\": {\n        devUtils.error(\"Error: %s\", unhandledRequestMessage);\n        throw new Error(\n          devUtils.formatMessage(\n            'Cannot bypass a request when using the \"error\" strategy for the \"onUnhandledRequest\" option.'\n          )\n        );\n      }\n      case \"warn\": {\n        devUtils.warn(\"Warning: %s\", unhandledRequestMessage);\n        break;\n      }\n      case \"bypass\":\n        break;\n      default:\n        throw new Error(\n          devUtils.formatMessage(\n            'Failed to react to an unhandled request: unknown strategy \"%s\". Please provide one of the supported strategies (\"bypass\", \"warn\", \"error\") or a custom callback function as the value of the \"onUnhandledRequest\" option.',\n            strategy2\n          )\n        );\n    }\n  }\n  if (typeof strategy === \"function\") {\n    strategy(request, {\n      warning: applyStrategy.bind(null, \"warn\"),\n      error: applyStrategy.bind(null, \"error\")\n    });\n    return;\n  }\n  if (url.protocol === \"file:\") {\n    return;\n  }\n  applyStrategy(strategy);\n}\nexport {\n  onUnhandledRequest\n};\n", "var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/set-cookie-parser/lib/set-cookie.js\nvar require_set_cookie = __commonJS({\n  \"node_modules/set-cookie-parser/lib/set-cookie.js\"(exports, module) {\n    \"use strict\";\n    var defaultParseOptions = {\n      decodeValues: true,\n      map: false,\n      silent: false\n    };\n    function isNonEmptyString(str) {\n      return typeof str === \"string\" && !!str.trim();\n    }\n    function parseString(setCookieValue, options) {\n      var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n      var nameValuePairStr = parts.shift();\n      var parsed = parseNameValuePair(nameValuePairStr);\n      var name = parsed.name;\n      var value = parsed.value;\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      try {\n        value = options.decodeValues ? decodeURIComponent(value) : value;\n      } catch (e) {\n        console.error(\n          \"set-cookie-parser encountered an error while decoding a cookie with value '\" + value + \"'. Set options.decodeValues to false to disable this feature.\",\n          e\n        );\n      }\n      var cookie = {\n        name,\n        value\n      };\n      parts.forEach(function(part) {\n        var sides = part.split(\"=\");\n        var key = sides.shift().trimLeft().toLowerCase();\n        var value2 = sides.join(\"=\");\n        if (key === \"expires\") {\n          cookie.expires = new Date(value2);\n        } else if (key === \"max-age\") {\n          cookie.maxAge = parseInt(value2, 10);\n        } else if (key === \"secure\") {\n          cookie.secure = true;\n        } else if (key === \"httponly\") {\n          cookie.httpOnly = true;\n        } else if (key === \"samesite\") {\n          cookie.sameSite = value2;\n        } else {\n          cookie[key] = value2;\n        }\n      });\n      return cookie;\n    }\n    function parseNameValuePair(nameValuePairStr) {\n      var name = \"\";\n      var value = \"\";\n      var nameValueArr = nameValuePairStr.split(\"=\");\n      if (nameValueArr.length > 1) {\n        name = nameValueArr.shift();\n        value = nameValueArr.join(\"=\");\n      } else {\n        value = nameValuePairStr;\n      }\n      return { name, value };\n    }\n    function parse(input, options) {\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      if (!input) {\n        if (!options.map) {\n          return [];\n        } else {\n          return {};\n        }\n      }\n      if (input.headers) {\n        if (typeof input.headers.getSetCookie === \"function\") {\n          input = input.headers.getSetCookie();\n        } else if (input.headers[\"set-cookie\"]) {\n          input = input.headers[\"set-cookie\"];\n        } else {\n          var sch = input.headers[Object.keys(input.headers).find(function(key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })];\n          if (!sch && input.headers.cookie && !options.silent) {\n            console.warn(\n              \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n            );\n          }\n          input = sch;\n        }\n      }\n      if (!Array.isArray(input)) {\n        input = [input];\n      }\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      if (!options.map) {\n        return input.filter(isNonEmptyString).map(function(str) {\n          return parseString(str, options);\n        });\n      } else {\n        var cookies = {};\n        return input.filter(isNonEmptyString).reduce(function(cookies2, str) {\n          var cookie = parseString(str, options);\n          cookies2[cookie.name] = cookie;\n          return cookies2;\n        }, cookies);\n      }\n    }\n    function splitCookiesString(cookiesString) {\n      if (Array.isArray(cookiesString)) {\n        return cookiesString;\n      }\n      if (typeof cookiesString !== \"string\") {\n        return [];\n      }\n      var cookiesStrings = [];\n      var pos = 0;\n      var start;\n      var ch;\n      var lastComma;\n      var nextStart;\n      var cookiesSeparatorFound;\n      function skipWhitespace() {\n        while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n          pos += 1;\n        }\n        return pos < cookiesString.length;\n      }\n      function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n      }\n      while (pos < cookiesString.length) {\n        start = pos;\n        cookiesSeparatorFound = false;\n        while (skipWhitespace()) {\n          ch = cookiesString.charAt(pos);\n          if (ch === \",\") {\n            lastComma = pos;\n            pos += 1;\n            skipWhitespace();\n            nextStart = pos;\n            while (pos < cookiesString.length && notSpecialChar()) {\n              pos += 1;\n            }\n            if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n              cookiesSeparatorFound = true;\n              pos = nextStart;\n              cookiesStrings.push(cookiesString.substring(start, lastComma));\n              start = pos;\n            } else {\n              pos = lastComma + 1;\n            }\n          } else {\n            pos += 1;\n          }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n          cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n      }\n      return cookiesStrings;\n    }\n    module.exports = parse;\n    module.exports.parse = parse;\n    module.exports.parseString = parseString;\n    module.exports.splitCookiesString = splitCookiesString;\n  }\n});\n\n// src/store.ts\nvar import_set_cookie_parser = __toESM(require_set_cookie());\nvar PERSISTENCY_KEY = \"MSW_COOKIE_STORE\";\nfunction supportsLocalStorage() {\n  try {\n    if (localStorage == null) {\n      return false;\n    }\n    const testKey = PERSISTENCY_KEY + \"_test\";\n    localStorage.setItem(testKey, \"test\");\n    localStorage.getItem(testKey);\n    localStorage.removeItem(testKey);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\nfunction isPropertyAccessible(object, method) {\n  try {\n    object[method];\n    return true;\n  } catch {\n    return false;\n  }\n}\nvar CookieStore = class {\n  constructor() {\n    this.store = /* @__PURE__ */ new Map();\n  }\n  add(request, response) {\n    if (isPropertyAccessible(request, \"credentials\") && request.credentials === \"omit\") {\n      return;\n    }\n    const requestUrl = new URL(request.url);\n    const responseCookies = response.headers.get(\"set-cookie\");\n    if (!responseCookies) {\n      return;\n    }\n    const now = Date.now();\n    const parsedResponseCookies = (0, import_set_cookie_parser.parse)(responseCookies).map(\n      ({ maxAge, ...cookie }) => ({\n        ...cookie,\n        expires: maxAge === void 0 ? cookie.expires : new Date(now + maxAge * 1e3),\n        maxAge\n      })\n    );\n    const prevCookies = this.store.get(requestUrl.origin) || /* @__PURE__ */ new Map();\n    parsedResponseCookies.forEach((cookie) => {\n      this.store.set(requestUrl.origin, prevCookies.set(cookie.name, cookie));\n    });\n  }\n  get(request) {\n    this.deleteExpiredCookies();\n    const requestUrl = new URL(request.url);\n    const originCookies = this.store.get(requestUrl.origin) || /* @__PURE__ */ new Map();\n    if (!isPropertyAccessible(request, \"credentials\")) {\n      return originCookies;\n    }\n    switch (request.credentials) {\n      case \"include\": {\n        if (typeof document === \"undefined\") {\n          return originCookies;\n        }\n        const documentCookies = (0, import_set_cookie_parser.parse)(document.cookie);\n        documentCookies.forEach((cookie) => {\n          originCookies.set(cookie.name, cookie);\n        });\n        return originCookies;\n      }\n      case \"same-origin\": {\n        return originCookies;\n      }\n      default:\n        return /* @__PURE__ */ new Map();\n    }\n  }\n  getAll() {\n    this.deleteExpiredCookies();\n    return this.store;\n  }\n  deleteAll(request) {\n    const requestUrl = new URL(request.url);\n    this.store.delete(requestUrl.origin);\n  }\n  clear() {\n    this.store.clear();\n  }\n  hydrate() {\n    if (!supportsLocalStorage()) {\n      return;\n    }\n    const persistedCookies = localStorage.getItem(PERSISTENCY_KEY);\n    if (!persistedCookies) {\n      return;\n    }\n    try {\n      const parsedCookies = JSON.parse(persistedCookies);\n      parsedCookies.forEach(([origin, cookies]) => {\n        this.store.set(\n          origin,\n          new Map(\n            cookies.map(([token, { expires, ...cookie }]) => [\n              token,\n              expires === void 0 ? cookie : { ...cookie, expires: new Date(expires) }\n            ])\n          )\n        );\n      });\n    } catch (error) {\n      console.warn(`\n[virtual-cookie] Failed to parse a stored cookie from the localStorage (key \"${PERSISTENCY_KEY}\").\n\nStored value:\n${localStorage.getItem(PERSISTENCY_KEY)}\n\nThrown exception:\n${error}\n\nInvalid value has been removed from localStorage to prevent subsequent failed parsing attempts.`);\n      localStorage.removeItem(PERSISTENCY_KEY);\n    }\n  }\n  persist() {\n    if (!supportsLocalStorage()) {\n      return;\n    }\n    const serializedCookies = Array.from(this.store.entries()).map(\n      ([origin, cookies]) => {\n        return [origin, Array.from(cookies.entries())];\n      }\n    );\n    localStorage.setItem(PERSISTENCY_KEY, JSON.stringify(serializedCookies));\n  }\n  deleteExpiredCookies() {\n    const now = Date.now();\n    this.store.forEach((originCookies, origin) => {\n      originCookies.forEach(({ expires, name }) => {\n        if (expires !== void 0 && expires.getTime() <= now) {\n          originCookies.delete(name);\n        }\n      });\n      if (originCookies.size === 0) {\n        this.store.delete(origin);\n      }\n    });\n  }\n};\nvar store = new CookieStore();\nexport {\n  PERSISTENCY_KEY,\n  store\n};\n", "import { store } from \"@mswjs/cookies\";\nfunction readResponseCookies(request, response) {\n  store.add({ ...request, url: request.url.toString() }, response);\n  store.persist();\n}\nexport {\n  readResponseCookies\n};\n", "import { until } from \"@open-draft/until\";\nimport { executeHandlers } from './executeHandlers.mjs';\nimport { onUnhandledRequest } from './request/onUnhandledRequest.mjs';\nimport { readResponseCookies } from './request/readResponseCookies.mjs';\nasync function handleRequest(request, requestId, handlers, options, emitter, handleRequestOptions) {\n  emitter.emit(\"request:start\", { request, requestId });\n  if (request.headers.get(\"x-msw-intention\") === \"bypass\") {\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  const lookupResult = await until(() => {\n    return executeHandlers({\n      request,\n      requestId,\n      handlers,\n      resolutionContext: handleRequestOptions?.resolutionContext\n    });\n  });\n  if (lookupResult.error) {\n    emitter.emit(\"unhandledException\", {\n      error: lookupResult.error,\n      request,\n      requestId\n    });\n    throw lookupResult.error;\n  }\n  if (!lookupResult.data) {\n    await onUnhandledRequest(request, options.onUnhandledRequest);\n    emitter.emit(\"request:unhandled\", { request, requestId });\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  const { response } = lookupResult.data;\n  if (!response) {\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  if (response.status === 302 && response.headers.get(\"x-msw-intention\") === \"passthrough\") {\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  readResponseCookies(request, response);\n  emitter.emit(\"request:match\", { request, requestId });\n  const requiredLookupResult = lookupResult.data;\n  const transformedResponse = handleRequestOptions?.transformResponse?.(response) || response;\n  handleRequestOptions?.onMockedResponse?.(\n    transformedResponse,\n    requiredLookupResult\n  );\n  emitter.emit(\"request:end\", { request, requestId });\n  return transformedResponse;\n}\nexport {\n  handleRequest\n};\n"],
  "mappings": "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",
  "names": ["error", "formatMessage", "error", "error", "error"]
}
